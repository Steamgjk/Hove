scp -r beatbat@12.12.10.13:/home/beatbat/pytorch-distributed-example/mnist-pytorch-v1.0.1/* /home/beatbat/pytorch-distributed-example/mnist-pytorch-v1.0.1/       

scp -r beatbat@12.12.10.13:/home/beatbat/Pytorch-Work /home/beatbat/
gcc -shared -o glue.so -fPIC glue.c -lpthread

ps -aux|grep python|cut -c 9-15|xargs kill -9

/usr/local/cuda/bin/nvprof --profile-from-start off --export-profile test.nvvp -f --print-gpu-trace --log-file test.txt  python worker_process-p2p.py --wid 0 --bs 32


3.55 ~ 3.56    10ms   

772ms ~ 782ms  10ms 

bs1  110~120ms  
bs4  ~0.4s 400ms

160459560

1605632 
1605632 1605632
401408  1605632
		1605632


bs1  5.63  6.45  700ms

IP:
39/40/97/44



	
106.13.68.218
export GLOO_SOCKET_IFNAME=eth2

export GLOO_SOCKET_IFNAME=eth3

export CUDA_VISIBLE_DEVICES='0'
export GLOO_SOCKET_IFNAME=enp0s3
python worker-allreduce-baseline.py --wid $WID --wn 3 --bs 4 --nproc 1 --prt 23112 --ip 172.16.0.64
python MultiPipe_bk.py --wid $WID --wn 3 --bs 4 --subbs 4 --nproc 3 --prt 23112 --ip 172.16.0.64

useradd beatbat
vim /etc/sudoers
passwd beatbat
scp -r beatbat@12.12.10.13:/home/beatbat/Anaconda3-5.3.1-Linux-x86_64.sh /home/beatbat/
scp -r beatbat@12.12.10.13:/home/beatbat/.pip /home/beatbat/

source /home/beatbat/anaconda3/etc/profile.d/conda.sh
conda config --prepend channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/



conda config --remove-key channels
conda config --prepend channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
conda create -n py37 python=3.7
conda activate py37
conda install pytorch torchvision cudatoolkit=9.0 -c https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
conda deactivate

[global]
index-url = https://pypi.mirrors.ustc.edu.cn/simple/
[install]
trusted-host=mirrows.aliyun.com

pip install --upgrade pip
pip install torch torchvision torchsummary

scp -r beatbat@12.12.10.13:/home/beatbat/.pip /home/beatbat/

scp -r beatbat@12.12.10.13:/home/beatbat/*.sh /home/beatbat/

scp -r beatbat@12.12.10.13:/home/beatbat/Pytorch-Work /home/beatbat/

scp -r beatbat@12.12.10.12:/home/beatbat/Pytorch-Work /home/beatbat/

scp -r beatbat@12.12.10.11:/home/beatbat/Pytorch-Work /home/beatbat/

source /home/beatbat/anaconda3/etc/profile.d/conda.sh

python MultiPipe.py --wid $WID --wn 4 --bs 8 --subbs 1


# 激活环境
source activate
# 退出环境
source deactivate

interface ethernet 1/25 speed 10G force

python MultiPipe.py --wid $WID --wn 9 --bs 4 --subbs 1 --nproc 1 --gn 3 --gsz 3 --prt 23112

python worker-allreduce-baseline.py --wid $WID --wn 9 --bs 4 --nproc 1 --prt 23112

python MultiPipe_bk.py --wid $WID --wn 3 --bs 4 --subbs 4 --nproc 3 --prt 23112 --ip 12.12.11.11

python Flex_demo.py --wid $WID --wn 4 --bs 4 --subbs 4 --prt 23112 --ip 12.12.11.11



export GLOO_SOCKET_IFNAME=eth3

Relu 层不能开头，因为反向传播时候没有backward_ctx
Conv, batchNorm, MaxPool，AvgPool 均可以打头


0        torch.Size([1, 64, 224, 224])   <class 'torch.nn.modules.conv.Conv2d'>
1        torch.Size([1, 64, 224, 224])   <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
2        torch.Size([1, 64, 224, 224])   <class 'torch.nn.modules.activation.ReLU'>
3        torch.Size([1, 64, 224, 224])   <class 'torch.nn.modules.conv.Conv2d'>
4        torch.Size([1, 64, 224, 224])   <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
5        torch.Size([1, 64, 224, 224])   <class 'torch.nn.modules.activation.ReLU'>
6        torch.Size([1, 64, 112, 112])   <class 'torch.nn.modules.pooling.MaxPool2d'>
7        torch.Size([1, 128, 112, 112])          <class 'torch.nn.modules.conv.Conv2d'>
8        torch.Size([1, 128, 112, 112])          <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
9        torch.Size([1, 128, 112, 112])          <class 'torch.nn.modules.activation.ReLU'>
10       torch.Size([1, 128, 112, 112])          <class 'torch.nn.modules.conv.Conv2d'>
11       torch.Size([1, 128, 112, 112])          <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
12       torch.Size([1, 128, 112, 112])          <class 'torch.nn.modules.activation.ReLU'>
13       torch.Size([1, 128, 56, 56])    <class 'torch.nn.modules.pooling.MaxPool2d'>
14       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.conv.Conv2d'>
15       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
16       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.activation.ReLU'>
17       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.conv.Conv2d'>
18       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
19       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.activation.ReLU'>
20       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.conv.Conv2d'>
21       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
22       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.activation.ReLU'>
23       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.conv.Conv2d'>
24       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
25       torch.Size([1, 256, 56, 56])    <class 'torch.nn.modules.activation.ReLU'>
26       torch.Size([1, 256, 28, 28])    <class 'torch.nn.modules.pooling.MaxPool2d'>
27       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.conv.Conv2d'>
28       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
29       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.activation.ReLU'>
30       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.conv.Conv2d'>
31       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
32       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.activation.ReLU'>
33       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.conv.Conv2d'>
34       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
35       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.activation.ReLU'>
36       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.conv.Conv2d'>
37       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
38       torch.Size([1, 512, 28, 28])    <class 'torch.nn.modules.activation.ReLU'>
39       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.pooling.MaxPool2d'>
40       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.conv.Conv2d'>
41       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
42       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.activation.ReLU'>
43       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.conv.Conv2d'>
44       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
45       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.activation.ReLU'>
46       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.conv.Conv2d'>
47       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
48       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.activation.ReLU'>
49       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.conv.Conv2d'>
50       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.batchnorm.BatchNorm2d'>
51       torch.Size([1, 512, 14, 14])    <class 'torch.nn.modules.activation.ReLU'>
52       torch.Size([1, 512, 7, 7])      <class 'torch.nn.modules.pooling.MaxPool2d'>
53       torch.Size([1, 512, 7, 7])      <class 'torch.nn.modules.pooling.AvgPool2d'>
54       torch.Size([1, 4096])   <class 'torch.nn.modules.linear.Linear'>
55       torch.Size([1, 4096])   <class 'torch.nn.modules.linear.Linear'>
56       torch.Size([1, 4096])   <class 'torch.nn.modules.linear.Linear'>



bs=4, channel=[128,128] layer=2    0.22075464487075805
bs=4, channel=[128,128] layer=3    0.32630832433700563

